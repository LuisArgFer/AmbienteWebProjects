{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andres Arguedas\\\\Documents\\\\6 cuatrimestre\\\\Ambiente web\\\\React\\\\AmbienteWeb1\\\\pruebatodo\\\\src\\\\components\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport axios from \"axios\"; //npm install cors --save para que funcione la api\n//import Form from 'react-bootstrap/Form';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  _s();\n\n  //const navigate=useNavigate();\n  let [users, setUsers] = useState({}); // useEffect(() => {\n  // \taxios.get(userUrl).then(function (response) {\n  // \t\tsetUsers(response.data);\n  // \t});\n  // }, []);\n\n  let navigate = useNavigate();\n\n  const Registrar = async (us, em, cont, cofcontra) => {\n    let date = [];\n\n    if (!us || !em || !cont || !cofcontra) {\n      //se validan los campos llenos\n      alert(\"Favor llenar todos los campos\");\n    } else {\n      axios.post('https://cors-anywhere.herokuapp.com/http://api.cup2022.ir/api/v1/user', {\n        name: us,\n        email: em,\n        password: cont,\n        passwordConfirm: cofcontra\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        if (response) {\n          navigate(\"/\");\n        }\n      }).catch(err => {\n        //valida errores\n        console.log(\"error: \" + err);\n        alert(\"Datos incorrectos\");\n      });\n    }\n\n    ;\n  };\n\n  let [user, setUserse] = useState('');\n  let [email, setEmail] = useState('');\n  let [contra, setContra] = useState('');\n  let [confcontra, setconfContra] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contain\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tex_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"email\",\n            type: \"text\",\n            onChange: ev => setUserse(ev.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tex_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"email\",\n            type: \"text\",\n            onChange: ev => setEmail(ev.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tex_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"contra\",\n            type: \"password\",\n            onChange: ev => setContra(ev.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tex_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"contra\",\n            type: \"password\",\n            onChange: ev => setconfContra(ev.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Register\",\n          onClick: () => Registrar(user, email, contra, confcontra)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nores\",\n          children: [\"you are registered? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"xYSkO/HYnppPey6wAamgWqH/cLk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","Register","props","users","setUsers","navigate","Registrar","us","em","cont","cofcontra","date","alert","post","name","email","password","passwordConfirm","headers","then","response","console","log","catch","err","user","setUserse","setEmail","contra","setContra","confcontra","setconfContra","ev","target","value"],"sources":["C:/Users/Andres Arguedas/Documents/6 cuatrimestre/Ambiente web/React/AmbienteWeb1/pruebatodo/src/components/Register/Register.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\"\r\nimport axios from \"axios\";\r\n//npm install cors --save para que funcione la api\r\n//import Form from 'react-bootstrap/Form';\r\nfunction Register(props) {\r\n    \r\n    //const navigate=useNavigate();\r\n    let [users, setUsers] = useState({});\r\n    // useEffect(() => {\r\n    // \taxios.get(userUrl).then(function (response) {\r\n    // \t\tsetUsers(response.data);\r\n    // \t});\r\n    // }, []);\r\n    let navigate=useNavigate();\r\n    const Registrar = async (us, em, cont, cofcontra) => {   \r\n        let date=[];\r\n        if(!us || !em || !cont || !cofcontra){//se validan los campos llenos\r\n            alert(\"Favor llenar todos los campos\");\r\n        }else{\r\n            axios.post('https://cors-anywhere.herokuapp.com/http://api.cup2022.ir/api/v1/user',{\r\n            name: us,\r\n            email:em,\r\n            password: cont,\r\n            passwordConfirm: cofcontra\r\n            },{\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                }  \r\n         }).then(function (response) {\r\n                 console.log(response);\r\n                 if(response){\r\n                    navigate(\"/\");\r\n                 }\r\n               }).catch(err=>{//valida errores\r\n                console.log(\"error: \"+err);\r\n                alert(\"Datos incorrectos\");\r\n              });\r\n              \r\n        };\r\n\r\n    };\r\n\r\n\r\n    \r\n    let [user, setUserse] = useState('');\r\n    let [email, setEmail] = useState('');\r\n    let [contra, setContra] = useState('');\r\n    let [confcontra, setconfContra] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container1\">\r\n                <h1>Register</h1>\r\n                <div id=\"contain\">\r\n                    <div className=\"tex_field\">\r\n                        <input className=\"email\" type=\"text\" onChange={ev => setUserse(ev.target.value)} required />\r\n                        <span></span>\r\n                        <label>Name</label>\r\n                    </div>\r\n                    <div className=\"tex_field\">\r\n                        <input className=\"email\" type=\"text\" onChange={ev => setEmail(ev.target.value)} required />\r\n                        <span></span>\r\n                        <label>Email</label>\r\n                    </div>\r\n                    <div className=\"tex_field\">\r\n                        <input className=\"contra\" type=\"password\" onChange={ev => setContra(ev.target.value)} required />\r\n                        <span></span>\r\n                        <label>Password</label>\r\n                    </div>\r\n                    <div className=\"tex_field\">\r\n                        <input className=\"contra\" type=\"password\" onChange={ev => setconfContra(ev.target.value)} required />\r\n                        <span></span>\r\n                        <label>Password Confirm</label>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Register\" onClick={() => Registrar(user, email, contra, confcontra)} />\r\n                    <div className=\"nores\">you are registered? <a href=\"/\">login</a></div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}